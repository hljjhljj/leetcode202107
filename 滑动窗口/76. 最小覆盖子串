class Solution {
public:
    string minWindow(string s, string t) {
        unordered_map<char,int> need;//need保存需要的字符数，windows保存窗口中有哪些字符
        unordered_map<char,int> windows;
        for(char c:t) need[c]++;//初始化need

        int vaild=0;//当vaild=need.size()时符合条件
        int start=0,len=INT_MAX;//起始值和长度定位子串
        int left=0,right=0;//定位窗口
        while(right<s.size()){
            //扩展窗口
            char c=s[right];
            right++;

            if(need.count(c)){
                windows[c]++;
                if(windows[c]==need[c]) vaild++;
            }
                
            while(vaild==need.size()){
                //收缩窗口
                if(right-left<len){
                    start=left;
                    len=right-left;
                }//符合条件的话更新结果
                char d=s[left];
                left++;
                if(need.count(d)){
                    if(windows[d]==need[d]) vaild--;
                    windows[d]--;
                }//把需要的字符移出窗口了！
                
            }
        }
        return len==INT_MAX?"":s.substr(start,len);
    }
};
