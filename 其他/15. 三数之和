class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        sort(nums.begin(),nums.end());
        vector<vector<int>> res3;
        for(int i=0;i<nums.size();){
            int store=nums[i];
            vector<vector<int>> res2=twoSum(nums,i+1,nums.size()-1,0-nums[i]);
            for(vector<int> temp:res2){
                temp.push_back(nums[i]);
                res3.push_back(temp);
            }
            while(i<nums.size() && nums[i]==store) i++;//防止重复
        }
        return res3;
    }

    vector<vector<int>> twoSum(vector<int>& nums,int start,int end,int target){
        int left=start,right=end;
        vector<vector<int>> res2;
        while(left<right){
            int one=nums[left],two=nums[right];
            if(one+two==target){
                res2.push_back({one,two});
                while(left<right && nums[left]==one) left++;
                while(left<right && nums[right]==two) right--;
            }
            if(one+two<target){
                while(left<right && nums[left]==one) left++;
            }
            if(one+two>target){
                while(left<right && nums[right]==two) right--;
            }
        }
        return res2;
    }
};
