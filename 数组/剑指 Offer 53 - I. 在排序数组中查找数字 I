class Solution {
public:
    int search(vector<int>& nums, int target) {
        //可以查一个左边界查一个右边界相减
        vector<int> res;
        int left=0,right=nums.size()-1;//[left,right]
        //先寻找左边界
        while(left<=right){
            int mid=left+(right-left)/2;
            if(nums[mid]>target) right=mid-1;
            if(nums[mid]==target) right=mid-1;
            if(nums[mid]<target) left=mid+1;
        }
        if(left>=nums.size() || nums[left]!=target) return 0;
        else res.push_back(left);
        //再寻找右边界
        left=0,right=nums.size()-1;//[left,right]
        while(left<=right){
            int mid=left+(right-left)/2;
            if(nums[mid]>target) right=mid-1;
            if(nums[mid]==target) left=mid+1;
            if(nums[mid]<target) left=mid+1;
        }
        //如果有左边界，说明存在这个数，则一定有右边界
        res.push_back(left-1);
        
        return res[1]-res[0]+1;
    }
};
