class Solution {
public:
    int findKthLargest(vector<int>& nums, int k) {
        int len=nums.size();
        build(nums,len);
        for(int i=0;i<k;i++){
            swap(nums[0],nums[len-1-i]);
            adjust(nums,0,len-1-i);
        }
        return nums[len-k];
    }
    void build(vector<int>& nums,int len){
        for(int i=len/2-1;i>=0;i--){
            adjust(nums,i,len);
        }
    }
    void adjust(vector<int>& nums,int index,int len){
        int left=index*2+1;
        int right=index*2+2;
        int maxindex=index;
        if(left<len && nums[left]>nums[index]) maxindex=left;
        if(right<len && nums[right]>nums[index] && nums[right]>nums[left]) maxindex=right;
        if(maxindex!=index){
            swap(nums[index],nums[maxindex]);
            adjust(nums,maxindex,len);
        }
    }
};
