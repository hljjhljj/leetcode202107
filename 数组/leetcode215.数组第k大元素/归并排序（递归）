class Solution {
public:
    int findKthLargest(vector<int>& nums, int k) {
        vector<int> temp(nums.size(),0);
        mergesort(nums,temp,0,nums.size()-1);

        for(int k=0 ; k<nums.size() ; k++){
            cout << nums[k] <<endl;
        }
        return nums[k-1];
    }
    void mergesort(vector<int>& nums,vector<int>& temp,int start,int end){
        if(start>=end) return;
        int len=end-start;
        int start1=start,end1=len/2+start1;
        int start2=end1+1,end2=end;
        mergesort(nums,temp,start1,end1);
        mergesort(nums,temp,start2,end2);
        int index=start;
        while(start1<=end1 && start2<=end2){
            if(nums[start1]>nums[start2]){
                temp[index++]=nums[start1++];
            }
            else{
                temp[index++]=nums[start2++];
            }
        }
        while(start1<=end1) temp[index++]=nums[start1++];
        while(start2<=end2) temp[index++]=nums[start2++];
        for (int k = start; k <= end; k++)
            nums[k] = temp[k];
    }
};
