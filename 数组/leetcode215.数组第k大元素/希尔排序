class Solution {
public:
    int findKthLargest(vector<int>& nums, int k) {
        
        int gap=nums.size()/2;
        for(;gap>0;gap=gap/2){
            for(int i=0;i<gap;i++){
                for(int j=i+gap;j<nums.size();j=j+gap){//内部就是插入排序了
                    int k=j;
                    int target = nums[j];
                    while((k-gap>=0) && target<nums[k-gap] ){
                        nums[k]=nums[k-gap];
                        k=k-gap;
                    }
                    nums[k]=target;
                }
            }
        }
        for(int k=0;k<nums.size();k++){
            cout << nums[k] << endl;
        }
        return nums[nums.size()-k];
    }
    
};


//感觉可能比上面那种更清楚了，里面和插排的写法一样
class Solution {
public:
    int findKthLargest(vector<int>& nums, int k) {
        int gap=nums.size()/2;
        for(;gap>=1;gap=gap/2){
            for(int i=0;i<gap;i++){
                for(int j=i+gap;j<nums.size();j=j+gap){
                    int target=nums[j];
                    int k;
                    for(k=j-gap;k>=i && nums[k]>target;k=k-gap){
                        nums[k+gap]=nums[k];
                    }
                    nums[k+gap]=target;
                }
            }
        }

        return nums[nums.size()-k];
    }

};
